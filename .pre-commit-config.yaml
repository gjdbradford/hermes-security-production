# Pre-commit hooks configuration
# Install with: npm install -g @commitlint/cli @commitlint/config-conventional
# Then: pre-commit install

repos:
  # Code formatting and linting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
        exclude: '\.md$'
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
        args: ['--pdb', 'console.log', 'debugger', 'alert']

  # TypeScript and React specific
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.57.0
    hooks:
      - id: eslint
        files: \.(ts|tsx|js|jsx)$
        types: [file]
        additional_dependencies:
          - eslint@^9.32.0
          - '@eslint/js@^9.32.0'
          - 'typescript-eslint@^8.38.0'
          - 'eslint-plugin-react-hooks@^5.2.0'
          - 'eslint-plugin-react-refresh@^0.4.20'
          - 'globals@^15.15.0'

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.2.5
    hooks:
      - id: prettier
        files: \.(ts|tsx|js|jsx|json|css|md|yaml|yml)$
        exclude: '^(dist/|node_modules/|\.git/)'

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: 'package-lock\.json$'

  # Build validation
  - repo: local
    hooks:
      - id: type-check
        name: TypeScript Type Check
        entry: npm run type-check
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false
        always_run: true

      - id: build-staging
        name: Staging Build Test
        entry: npm run build:staging
        language: system
        files: \.(ts|tsx|js|jsx|css|html)$
        pass_filenames: false
        always_run: true

      - id: build-production
        name: Production Build Test
        entry: npm run build:production
        language: system
        files: \.(ts|tsx|js|jsx|css|html)$
        pass_filenames: false
        always_run: true

      - id: test-routing
        name: Routing Tests
        entry: npm run test:routing
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false
        always_run: true

      - id: test-all-environments
        name: Environment Tests
        entry: npm run test:all-envs
        language: system
        files: \.(ts|tsx|js|jsx)$
        pass_filenames: false
        always_run: true
